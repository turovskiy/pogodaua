{"version":3,"sources":["api.js","components/search/search.js","components/current-weather/current-weather.js","components/forecast/forecast.js","components/ui/Madewithlove.js","App.js","reportWebVitals.js","index.js"],"names":["geoApiOptions","method","headers","X-RapidAPI-Key","X-RapidAPI-Host","WEATHER_API_URL","WEATHER_API_KEY","Search","_ref","onSearchChange","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","react_default","a","createElement","es","placeholder","debounceTimeout","className","value","onChange","searchData","loadOptions","inputValue","arguments","length","undefined","fetch","concat","then","response","json","console","log","data","options","map","city","latitude","longitude","label","name","countryCode","CurrentWeather","alt","src","weather","icon","Math","round","main","temp","feels_like","wind","speed","humidity","pressure","WEEK_DAYS","Forecast","dayInAWeek","Date","getDay","forecastDays","slice","Fragment","dist_es","allowZeroExpanded","list","splice","item","idx","key","temp_max","temp_min","clouds","all","sea_level","MadeWithLove","class","App","currentWeather","setCurrentWeather","_useState3","_useState4","forecast","setForecast","search_search","_searchData$value$spl","split","_searchData$value$spl2","lat","lon","currentWeatherFetch","forecastFetch","Promise","asyncToGenerator","_regeneratorRuntime","mark","_callee","weatherResponse","forcastResponse","wrap","_context","prev","next","sent","objectSpread","stop","_x","apply","this","catch","current_weather","forecast_forecast","Madewithlove","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"0PAAaA,EAAgB,CAC3BC,OAAQ,MACRC,QAAS,CACPC,iBAAkB,qDAClBC,kBAAmB,8BAKVC,EAAkB,0CAClBC,EAAkB,mCCoChBC,EA1CA,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,eAAqBC,EACTC,mBAAS,MADAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9BK,EAD8BH,EAAA,GACtBI,EADsBJ,EAAA,GA8BrC,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,YAAY,kBACZC,gBAAiB,IACjBC,UAAW,gDACXC,MAAOT,EACPU,SAXmB,SAACC,GACtBV,EAAUU,GACVjB,EAAeiB,IAUbC,YAlCgB,WAAiC,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,eAChC,OAAOG,MAAK,GAAAC,ODDW,2CCCX,qCAAAA,OAIwCL,GAClD5B,GAECkC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACC,GAEL,OADAE,QAAQC,IAAIH,EAASI,MACd,CACLC,QAASL,EAASI,KAAKE,IAAI,SAACC,GAC1B,MAAO,CACLlB,MAAK,GAAAS,OAAKS,EAAKC,SAAV,KAAAV,OAAsBS,EAAKE,WAChCC,MAAK,GAAAZ,OAAKS,EAAKI,KAAV,MAAAb,OAAmBS,EAAKK,uBCwB5BC,EA5CQ,SAAAxC,GAAc,IAAX+B,EAAW/B,EAAX+B,KACxB,OACEtB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wEACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGI,UAAU,yCAAyCgB,EAAKG,OAG7DzB,EAAAC,EAAAC,cAAA,OACE8B,IAAI,UACJ1B,UAAU,eACV2B,IAAG,SAAAjB,OAAWM,EAAKY,QAAQ,GAAGC,KAA3B,WAGPnC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,eAAe8B,KAAKC,MAAMf,EAAKgB,KAAKC,MAAjD,SACAvC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,8EAEFN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,2FACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,UACb8B,KAAKC,MAAMf,EAAKgB,KAAKE,YADxB,UAIFxC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,2FACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,UAAUgB,EAAKmB,KAAKC,MAApC,+BAEF1C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,4DACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,UAAUgB,EAAKgB,KAAKK,SAApC,MAEF3C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aAAhB,iGACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,UAAUgB,EAAKgB,KAAKM,SAApC,oBC5BNC,EAAY,CAAC,yDAAa,mDAAY,uCAAU,uCAAU,8CAAa,uCAAU,wCA2DxEC,EAzDE,SAAAvD,GAAc,IAAX+B,EAAW/B,EAAX+B,KACZyB,GAAa,IAAIC,MAAOC,SACxBC,EAAeL,EAAUM,MAAMJ,EAAYF,EAAUhC,QAAQG,OAAO6B,EAAUM,MAAM,EAAGJ,IAE7F,OACE/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmD,SAAA,KACEpD,EAAAC,EAAAC,cAAA,SAAOI,UAAU,6CAAjB,wGACAN,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAWC,mBAAiB,GACzBhC,EAAKiC,KAAKC,OAAO,EAAG,GAAGhC,IAAI,SAACiC,EAAMC,GAAP,OAC1B1D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAeM,IAAKD,GAClB1D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oEACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wCACfN,EAAAC,EAAAC,cAAA,OAAK+B,IAAG,SAAAjB,OAAWyC,EAAKvB,QAAQ,GAAGC,KAA3B,QAAuC7B,UAAU,YAAY0B,IAAI,YACzEhC,EAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAO4C,EAAaQ,IAErC1D,EAAAC,EAAAC,cAAA,SAAOI,UAAU,WAAW8B,KAAKC,MAAMoB,EAAKnB,KAAKsB,UAAjD,WAAiExB,KAAKC,MAAMoB,EAAKnB,KAAKuB,UAAtF,aAKN7D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,aAAjB,kGACAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,UAAUmD,EAAKnB,KAAKM,SAArC,QAEF5C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,aAAjB,6GACAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,UAAUmD,EAAKnB,KAAKK,SAArC,MAEF3C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,aAAjB,6DACAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,UAAUmD,EAAKK,OAAOC,IAAvC,MAEF/D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,aAAjB,2FACAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,UAAUmD,EAAKhB,KAAKC,MAArC,+BAEF1C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,aAAjB,4HACAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,UAAUmD,EAAKnB,KAAK0B,UAArC,WAEFhE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,IACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,aAAjB,kGACAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,UAAUmD,EAAKnB,KAAKE,WAArC,kBCjDHyB,EAPO,WACjB,OACKjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmD,SAAA,KACMpD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uDAAsDN,EAAAC,EAAAC,cAAA,QAAMgE,MAAM,yCAAZ,aAA8DlE,EAAAC,EAAAC,cAAA,OAAMI,UAAU,oBAAoB0B,IAAI,eAAKC,IAAI,0DAA/G,2yMC2CtEkC,MAvCf,WAAe,IAAA1E,EAC+BC,mBAAS,MADxCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACN2E,EADMzE,EAAA,GACU0E,EADV1E,EAAA,GAAA2E,EAEmB5E,mBAAS,MAF5B6E,EAAA3E,OAAAC,EAAA,EAAAD,CAAA0E,EAAA,GAENE,EAFMD,EAAA,GAEIE,EAFJF,EAAA,GAyBb,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmD,SAAA,KACEpD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6EACXN,EAAAC,EAAAC,cAACwE,EAAD,CAAQlF,eAxBa,SAACiB,GAAe,IAAAkE,EACxBlE,EAAWF,MAAMqE,MAAM,KADCC,EAAAjF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GACpCG,EADoCD,EAAA,GAC/BE,EAD+BF,EAAA,GAGrCG,EAAsBjE,MAAK,GAAAC,OAC5B5B,EAD4B,iBAAA4B,OACG8D,EADH,SAAA9D,OACc+D,EADd,WAAA/D,OAC2B3B,EAD3B,kBAG3B4F,EAAgBlE,MAAK,GAAAC,OACtB5B,EADsB,kBAAA4B,OACU8D,EADV,SAAA9D,OACqB+D,EADrB,WAAA/D,OACkC3B,EADlC,kBAI3B6F,QAAQnB,IAAI,CAACiB,EAAqBC,IAC/BhE,KADH,eAAA1B,EAAAK,OAAAuF,EAAA,EAAAvF,CAAAwF,IAAAC,KACQ,SAAAC,EAAOpE,GAAP,IAAAqE,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC0B1E,EAAS,GAAGC,OADtC,cACEoE,EADFG,EAAAG,KAAAH,EAAAE,KAAA,EAE0B1E,EAAS,GAAGC,OAFtC,OAEEqE,EAFFE,EAAAG,KAIJxB,EAAkBzE,OAAAkG,EAAA,EAAAlG,CAAA,CAAE6B,KAAMhB,EAAWmB,OAAU2D,IAC/Cd,EAAY7E,OAAAkG,EAAA,EAAAlG,CAAA,CAAE6B,KAAMhB,EAAWmB,OAAU4D,IALrC,wBAAAE,EAAAK,SAAAT,MADR,gBAAAU,GAAA,OAAAzG,EAAA0G,MAAAC,KAAAtF,YAAA,IAQGuF,MAAM/E,QAAQC,QAOV+C,GAAkBpE,EAAAC,EAAAC,cAACkG,EAAD,CAAgB9E,KAAM8C,IACxCI,GAAYxE,EAAAC,EAAAC,cAACmG,EAAD,CAAU/E,KAAMkD,IAC7BxE,EAAAC,EAAAC,cAACoG,EAAD,SC5BKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAA1F,KAAAyF,EAAAE,KAAA,UAAqB3F,KAAK,SAAA1B,GAAiD,IAA9CsH,EAA8CtH,EAA9CsH,OAAQC,EAAsCvH,EAAtCuH,OAAQC,EAA8BxH,EAA9BwH,OAAQC,EAAsBzH,EAAtByH,OAAQC,EAAc1H,EAAd0H,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtH,EAAAC,EAAAC,cAACF,EAAAC,EAAMsH,WAAP,KACEvH,EAAAC,EAAAC,cAACsH,EAAD,QAIJjB","file":"static/js/main.fb1b7eaa.chunk.js","sourcesContent":["export const geoApiOptions = {\n  method: \"GET\",\n  headers: {\n    \"X-RapidAPI-Key\": \"64df2cb551mshce04ad37cb00cbep16e165jsna2557ce7536e\",// rapid api key\n    \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\",\n  },\n};\nexport const GEO_API_URL = \"https://wft-geo-db.p.rapidapi.com/v1/geo\";\n\nexport const WEATHER_API_URL = \"https://api.openweathermap.org/data/2.5\";\nexport const WEATHER_API_KEY = \"840d5c121a2f38ca2a09cb527da803f0\"; //openweather API\n","import React, { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { geoApiOptions, GEO_API_URL } from \"../../api\";\n\nconst Search = ({ onSearchChange }) => {\n  const [search, setSearch] = useState(null);\n\n  const loadOptions = (inputValue = \"Kotsiubynske\") => {\n    return fetch(\n      // `${GEO_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`,\n      // countries/UA/regions/${inputValue}/cities?\n      // `${GEO_API_URL}/cities?namePrefix=${inputValue}`,\n      `${GEO_API_URL}/cities?countryIds=UA&namePrefix=${inputValue}`,\n      geoApiOptions\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response.data)\n        return {\n          options: response.data.map((city) => {\n            return {\n              value: `${city.latitude} ${city.longitude}`,\n              label: `${city.name}, ${city.countryCode}`,\n            };\n          }),\n        };\n      });\n  };\n\n  const handleOnChange = (searchData) => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n\n  return (\n    <AsyncPaginate\n      placeholder=\"Search for city\"\n      debounceTimeout={600}\n      className={\"border py-2 px-3 text-grey-darkest w-1/2 mt-4\"}\n      value={search}\n      onChange={handleOnChange}\n      loadOptions={loadOptions}\n    />\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst CurrentWeather = ({ data }) => {\n  return (\n    <div className=\"flex p-6 border-2 shadow-2xl weather top rounded-2xl border-gray-50 \">\n      <div className=\"\">\n        <div>\n          <p className=\"city text-center text-base font-bold \">{data.city}</p>\n          {/* <p className=\"weather-description\">{data.weather[0].description}</p> */}\n        </div>\n        <img\n          alt=\"weather\"\n          className=\"weather-icon\"\n          src={`icons/${data.weather[0].icon}.png`}\n        />\n      </div>\n      <div className=\"\">\n        <p className=\"temperature\">{Math.round(data.main.temp)}Â°C</p>\n        <div className=\"details\">\n          <div className=\"parameter-row\">\n            <span className=\"font-bold\">ÐÐµÑÐ°Ð»ÑÐ½ÑÑÐµ ð</span>\n          </div>\n          <div className=\"parameter-row\">\n            <span className=\"font-bold\">ÐÑÐ´ÑÑÐ²Ð°ÑÑÑÑÑ ÑÐº :</span>\n            <span className=\"italic\">\n              {Math.round(data.main.feels_like)}Â°C\n            </span>\n          </div>\n          <div className=\"parameter-row\">\n            <span className=\"font-bold\">ÑÐ²Ð¸Ð´ÐºÑÑÑÑ Ð²ÑÑÑÑ :</span>\n            <span className=\"italic\">{data.wind.speed} Ð¼/ÑÐµÐº</span>\n          </div>\n          <div className=\"parameter-row\">\n            <span className=\"font-bold\">ÐÐ¾Ð»Ð¾Ð³ÑÑÑÑ :</span>\n            <span className=\"italic\">{data.main.humidity}%</span>\n          </div>\n          <div className=\"parameter-row\">\n            <span className=\"font-bold\">ÐÑÐ¼Ð¾ÑÑÐµÑÐ½Ð¸Ð¹ ÑÐ¸ÑÐº :</span>\n            <span className=\"italic\">{data.main.pressure} hPa</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n","import React from \"react\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\n\n// const WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst WEEK_DAYS = ['ÐÐ¾Ð½ÐµÐ´ÑÐ»Ð¾Ðº', 'ÐÑÐ²ÑÐ¾ÑÐ¾Ðº', 'Ð¡ÐµÑÐµÐ´Ð°', 'Ð§ÐµÑÐ²ÐµÑ', 'Ð\\'ÑÑÐ½Ð¸ÑÑ', 'Ð¡ÑÐ±Ð¾ÑÐ°', 'ÐÐµÐ´ÑÐ»Ñ'];\n\nconst Forecast = ({ data }) => {\n  const dayInAWeek = new Date().getDay();\n  const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\n  \n  return (\n    <>\n      <label className=\"font-bold text-center text-gray-600 title\">ÐÐ¾Ð³Ð¾Ð´Ð° Ð½Ð° ÑÑÐ¾Ð³Ð¾Ð´Ð½Ñ :</label>\n      <Accordion allowZeroExpanded>\n        {data.list.splice(0, 7).map((item, idx) => (\n          <AccordionItem key={idx}>\n            <AccordionItemHeading>\n              <AccordionItemButton>\n                <div className=\"p-6 mt-4 bg-white border-2 shadow-2xl rounded-2xl border-gray-50\">\n                  <div className=\"flex flex-row items-center space-x-4\">\n                  <img src={`icons/${item.weather[0].icon}.png`} className=\"w-20 h-20\" alt=\"weather\" />\n                  <label className=\"day\">{forecastDays[idx]}</label>\n                  {/* <label className=\"description\">{item.weather[0].description}</label> */}\n                  <label className=\"min-max\">{Math.round(item.main.temp_max)}Â°C / {Math.round(item.main.temp_min)}Â°C</label>\n                  </div>\n                </div>\n              </AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel>\n              <div className=\"ml-6\">\n                <div className=\"\">\n                  <label className=\"font-bold\">ÐÑÐ¼Ð¾ÑÑÐµÑÐ½Ð¸Ð¹ ÑÐ¸ÑÐº : </label>\n                  <label className=\"italic\">{item.main.pressure}hPa</label>\n                </div>\n                <div className=\"\">\n                  <label className=\"font-bold\">ÐÑÐ´Ð½Ð¾ÑÐ½Ð° Ð²Ð¾Ð»Ð¾Ð³ÑÑÑÑ :</label>\n                  <label className=\"italic\">{item.main.humidity}%</label>\n                </div>\n                <div className=\"\">\n                  <label className=\"font-bold\">Ð¥Ð¼Ð°ÑÐ½ÑÑÑÑ : </label>\n                  <label className=\"italic\">{item.clouds.all}%</label>\n                </div>\n                <div className=\"\">\n                  <label className=\"font-bold\">Ð¨Ð²Ð¸Ð´ÐºÑÑÑÑ Ð²ÑÑÑÑ :</label>\n                  <label className=\"italic\">{item.wind.speed} Ð¼/ÑÐµÐº</label>\n                </div>\n                <div className=\"\">\n                  <label className=\"font-bold\">ÐÐ¸ÑÐ¾ÑÐ° Ð½Ð°Ð´ ÑÑÐ²Ð½ÐµÐ¼ Ð¼Ð¾ÑÑ : </label>\n                  <label className=\"italic\">{item.main.sea_level}Ð¼</label>\n                </div>\n                <div className=\"\">\n                  <label className=\"font-bold\">ÐÑÐ´ÑÑÐ²Ð°ÑÑÑÑÐ¼Ñ ÑÐº : </label>\n                  <label className=\"italic\">{item.main.feels_like}Â°C</label>\n                </div>\n              </div>\n            </AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </>\n  );\n};\n\nexport default Forecast;\n","import React from \"react\";\n\n const MadeWithLove = () => {\n     return(\n          <>\n                <div className=\"flex items-center justify-center w-ful my-4 mx-auto\"><span class=\"flex gap-1 text-sky-500 font-medium  \">made with <img  className=\"h-6 animate-pulse\" alt=\"â¤ï¸\" src=\"https://s.w.org/images/core/emoji/13.0.1/svg/2764.svg\"/> by alexturik</span></div>\n          </>\n     )\n}\nexport default MadeWithLove\n\n\n    ","import React from 'react';\nimport { useState } from \"react\";\nimport Search from \"./components/search/search\";\nimport CurrentWeather from \"./components/current-weather/current-weather\";\nimport Forecast from \"./components/forecast/forecast\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./api\";\nimport MadeWithLove from \"./components/ui/Madewithlove\";\nimport \"./App.css\";\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const forecastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([currentWeatherFetch, forecastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forcastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forcastResponse });\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <>\n      <div className=\"container flex flex-col items-center justify-center w-full h-full mx-auto\">\n          <Search onSearchChange={handleOnSearchChange} />\n          {currentWeather && <CurrentWeather data={currentWeather} />}\n          {forecast && <Forecast data={forecast} />}\n          <MadeWithLove/>\n\n    </div>\n    </>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}